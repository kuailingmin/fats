/*
 * fats init command
 * */
var fs = require('fs');
var path = require('path');
exports.name = 'init';
exports.usage = '[options]';
exports.desc = 'initialization project by template';
exports.register = function (commander) {

	var projectName, hasBranches, template,
		fats = require('fats-kernel'),
		root = process.cwd(),
		inquirer = require('inquirer');

	var yesOrNoArr = ['yes', 'no'];
	var templateArr = ['fats-default', 'xxxxxx', 'yyyyyyyyyyyy', 'eeeeeeeeeeeeee'];

	// init custom info
	function initPrompt() {
		inquirer.prompt([
			{
				type: 'input',
				name: 'projectName',
				default: 'demo',
				message: 'Project name：'
			},
			{
				type: 'input',
				name: 'hasBranches',
				choices: yesOrNoArr,
				default: 'no',
				validate: function (val) {
					return fats.util.inArray(val, yesOrNoArr);
				},
				message: 'Has branches [' + yesOrNoArr.join('/') + ']：'
			},
			{
				type: 'input',
				name: 'template',
				choices: templateArr,
				default: 'fats-default',
				validate: function (val) {
					return fats.util.inArray(val, templateArr);
				},
				message: 'Template：'
			}
		], function (opts) {
			fats.util.extend(opts, {root: root});
			initAction(opts);
		})
	}

	// init action
	function initAction(opts) {
		console.log(opts);	

		writePackage(opts);

		addProject(opts);		
	}

	commander.action(function () {
		initPrompt();
	});
	//write package
	function writePackage(opts){

		var packageJsonfile = path.dirname(path.dirname(process.argv[1]))+'/lib/templates/_demo/package.json';
		//write packagejson
		var packageJsonXml = 
  			"{\n" 
  			+'  "projectName": '
  			+'"'+opts.projectName+'"'
  			+" ,\n"
  			+'  "Hasbranches": '
  			+'"'+opts.hasBranches+'"'
  			+" ,\n" 
  			+'  "Template": '
  			+'"'+opts.template+'"'
  			+"\n" 
  			+"}\n" ;

		fs.writeFile( packageJsonfile , packageJsonXml , function (err) { 
			if (err) 
			throw err; 
			//console.log('It\'s saved!'); 
		});

	}
	//path add project
	function addProject(opts){	
		var thisPath = path.dirname(path.dirname(process.argv[1]))+'/lib/templates/_demo/' ;	
		var acTionPath = opts.root+"/"+opts.projectName;
		//console.log("远程仓库包地址："+thisPath);
		//console.log("需要copy到的目录："+acTionPath);
		 // 复制文件
		//fats.util
		fats.util.exists(thisPath, acTionPath, fats.util.copy , function(){console.log("ok")}); 
	}
};