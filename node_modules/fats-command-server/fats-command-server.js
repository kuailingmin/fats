/*
 * fats server command
 * */
exports.name = 'server';
exports.usage = '<command> [options]';
exports.desc = 'launch a web server';
exports.register = function (commander) {

	var serverRoot = process.cwd();

	commander
		.option('-w, --watch <switch>', 'on/off, ', String, 'on')
		.option('-r, --root <root>', 'document root', String, serverRoot)
		.option('-p, --port <port>', 'server listen port', 3000)
		.action(function () {

			var fats = require('fats-kernel');
			var path = require('path');
			var args = Array.prototype.slice.call(arguments);
			var options = args.pop();
			var cmd = args.shift();
			var root = options.root || serverRoot;
			var port = parseInt(options.port);
			var watch = options.watch;

			var daemon = require('daemonize2').setup({
				main: path.join(__dirname, './server.js'),
				name: 'fats',
				pidfile: 'fatsDaemon.pid',
				argv: ['--root', root, '--port', port, '--watch', watch]
			});

			var script = path.join(__dirname, './lib/app.js');

			switch (cmd) {
				case 'start':
					var pid = daemon.status();
					if (pid) {
						console.log('Daemon running. PID: ' + pid);
					} else {
						daemon.start();
						var ip = require('ip');
						fats.util.openURL('http://' + ip.address() + ':' + port);
					}
					break;

				case 'restart':
					daemon.stop(function (err) {
						daemon.start();
					});
					break;

				case 'status':
					var pid = daemon.status();
					if (pid)
						console.log('Daemon running. PID: ' + pid);
					else
						console.log('Daemon is not running.');
					break;

				case 'stop':
					daemon.stop();
					break;

				case 'kill':
					daemon.kill();
					break;

				default:
					commander.help();
					return;

			}

			/*var port = parseInt(options.port);
			 var watch = options.watch;

			 console.log('cmd: ' + cmd);
			 console.log('serverRoot: ' + root);
			 console.log('watch: ' + watch);
			 console.log('port: ' + port);*/

		}).on('--help', function () {
			console.log('  Examples:');
			console.log('');
			console.log('    $ fats server start');
			console.log('    $ fats server start -w off -p 3000');
			console.log('    $ fats server stop');
			console.log('');
		});

	commander
		.command('start')
		.description('start server');

	commander
		.command('stop')
		.description('shutdown server');

	commander
		.command('restart')
		.description('restart server');

	commander
		.command('open')
		.description('open document root directory');
};