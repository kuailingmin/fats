module.exports = function (filesArray, root) {

	require('date-format-lite');

	var fs = require('fs'),
		path = require('path'),
		fats = require('fats-kernel'),
		JSHINT = require('jshint').JSHINT,
		jsfile = filesArray,
		root = root.replace(/\\/g, '/');

	var buildfile = root + '/.report/report-jshint.html',  // 生成报告文件
		tpl = __dirname + '/report-template-jshint.html'; // 报告模板

	var data = [];
	var needReport = false;
	var errorTotalCount = 0;
	for (var i = 0; i < jsfile.length; i++) {
		var errorCount = 0,
			warningCount = 0;
		var source = fats.util.read(jsfile[i]);
		JSHINT(source,{
			"browser": true,
			"undef": true,
			"unused": true,
			"predef": ["jQuery", "$" ]
		});

		var messages = JSHINT.errors;

		if (messages.length > 0) {
			needReport = true;
		}

		for (var j = 0; j < messages.length; j++) {
			if (/E.*?/.test(messages[j].code)) {
				messages[j].type = 'error';
				errorCount += 1;
			} else {
				messages[j].type = 'warning';
				warningCount += 1;
			}
		}

		data.push({
			messages: messages,
			file: jsfile[i]
		});

		console.log(' File ' + jsfile[i].cyan + ' verified: ' +
			'error ' + errorCount.toString().red.bold + ',  ' +
			'warning ' + warningCount.toString().yellow.bold);

	}


	/*
	 * 根据模板生成校验报告
	 * */
	var reportDir = path.join(root, './.report');
	if (needReport) {

		/*
		 * 如果不存在，则建立 .report 文件夹
		 * */
		if (!fats.util.exists(reportDir)) {
			fs.mkdirSync(reportDir);
		}

		var template = fats.template;
		template.config('extname', '');

		var d = fats.util.localDate();
		var html = template(tpl, {
			data: data,
			version: fats.cli.info.version,
			time: d.format('UTC:YYYY-MM-DD hh:mm:ss')
		});
		// 写入报告文件
		fs.writeFileSync(buildfile, html);
		// 控制台提示报告已写入
		console.log(' Report file has been created: '.yellow.bold + buildfile.cyan.bold);
	} else {
		// 如果存在，则删除文件
		if (fats.util.exists(buildfile)) {
			fs.unlinkSync(buildfile);
		}
	}


	if (errorTotalCount > 0) {
		fats.log.error('Task has been terminated');
		process.exit(0);
	}

}