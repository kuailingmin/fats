module.exports = function () {

	var plugins = [
		'uglify',
		'cssminfy',
		'clean-css',
		'csslint',
		'jslint'
	];

	var fats = this;
	var taskParser = require('./taskParse');
	var taskConfig = fats.taskConfig;
	var taskList = taskConfig.taskList;
//	console.log(taskConfig.fats.template.today('UTC:YYYY-MM-DD hh:mm:ss'));
//	console.log(taskConfig.fats.template.today('YYYY-MM-DD hh:mm:ss'));
//	console.log(taskConfig.fats.template.today('YYYY.MM.DD'));
//	console.log(env);
//	console.log(taskList);
//	console.log(taskConfig);


	/*
	 * 缓存所有任务
	 * */
	var topParsed = taskList._parsed = {};

	for (var taskName in taskList) {

		/*
		 * 注册任务名称，合法的则执行，不合法的则直接抛弃
		 * */
		if (!fats.util.inArray(taskName, plugins)) {
			continue;
		}

		/*
		 * taskObject: 系统规定的任务名称，如：csslint
		 * 对应相应的功能模块，不可更改
		 * */
		var taskObject = taskList[taskName];
		topParsed[taskName] = {};

		for (var subTaskKey in taskObject) {

			/*
			 * subTaskKey: 用户自定义的任务组名称，不具有实际意义，如：task1
			 * subTask: 具体的子任务组
			 * subTaskOptions: 具体子任务组的 options 项
			 * */
			var subTask = taskObject[subTaskKey];
			var subTaskOptions = subTask.options;

			var _parsed = {};
			_parsed.taskList = {};

			/*
			 * 解析 options 项
			 * */
			if ('undefined' != typeof subTaskOptions) {
				_parsed.options = {};
				for (var optionsKey in subTaskOptions) {
					if ('undefined' != typeof taskParser[optionsKey]) {
						var parsed = taskParser[optionsKey](subTaskOptions[optionsKey]);
						_parsed.options[optionsKey] = parsed;
					}
				}
			}

			/*
			 * 解析任务分组缓存至 taskList
			 * 此时需要删除任务组内可能重复的任务
			 * */



			/*
			 * 缓存至顶层备用
			 * */
			topParsed[taskName][subTaskKey] = _parsed;


		}

	}

	console.log(topParsed);

//	console.log(taskList.uglify);

};